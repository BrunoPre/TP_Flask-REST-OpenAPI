openapi: 3.0.1
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/BlueeDD/secondOne/1.0.0
info:
  description: This is the API of the Movie service
  version: 1.0.0
  title: Movie API
  contact:
    email: pierre.lafon@imt-atlantique.net
  license:
    name: GPL v3
    url: 'https://www.gnu.org/licenses/gpl-3.0.en.html'
tags:
  - name: admins
    description: Secured Admin-only calls
  - name: developers
    description: Operations available to regular developers
    
paths:
  /movie:
      get:
        tags:
          - developers
        summary: get the full movie database
        operationId: get_json
        description: |
          Nothing to do
        responses:
          '200':
            description: full JSON
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/AllMovies'
  
            
  /movies/{movieid}:
    get:
      tags:
        - developers
      summary: get the movie by its id
      operationId: get_movie_byid
      description: |
        By passing in the appropriate options, you can get info of a Movie
      parameters:
        - name: movieid
          in: path
          required: true
          description: Movie ID.
          schema:
            type : string
            minimum: 1
            maximum: 1
      responses:
        '200':
          description: Movie description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieItem'
        '400':
          description: bad input parameter
    post:
      tags:
        - admins
      summary: add a movie item
      operationId: create_movie
      description: Adds a movie to the system
      parameters:
        - name: movieid
          in: path
          required: true
          description: Movie ID.
          schema:
            type : string
            minimum: 1
            maximum: 1
      responses:
        '200':
          description: Movie created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieItem'
        '409':
          description: an existing item already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovieItem'
        description: Inventory item to add
    delete:
      tags:
        - admins
      summary: delete the movie by its id
      operationId: delete_movie_byid
      description: |
        By passing in the appropriate options, you can delete a Movie
      parameters:
        - name: movieid
          in: path
          required: true
          description: Movie ID.
          schema:
            type : string
            minimum: 1
            maximum: 1
      responses:
        '200':
          description: Movie deleted
        '400':
          description: bad input parameter
          
  /movie/{movieid}/{rate}:
    put:
      tags:
        - admins
      summary: update a movie rate
      operationId: update_rate
      description: Update a rate of a movie of the system
      parameters:
        - name: movieid
          in: path
          required: true
          description: Movie ID.
          schema:
            type : string
            minimum: 1
            maximum: 1
        - in: path
          name : rate
          required: true
          description: New movie rate.
          schema:
            type : integer
            minimum: 1
            maximum: 1
      responses:
        '200':
          description: Movie rate updated
        '409':
          description: an existing item already exists
        
  /movie/{rate}:
    delete:
      tags:
        - admins
      summary: delete the movie by its rate
      operationId: delete_movie_byrate
      description: |
        By passing in the appropriate options, you can delete a Movie
      parameters:
        - in: path
          name: rate
          required: true
          description: Movie rating.
          schema:
            type : integer
            minimum: 1
            maximum: 1
      responses:
        '200':
          description: Movie deleted
        '400':
          description: bad input parameter
          
  /movie/{title}:
    get:
      tags:
        - developers
      summary: get the movie by its title
      operationId: get_movie_bytitle
      description: |
        By passing in the appropriate options, you can get Movie info
      parameters:
        - in: path
          name: title
          description: pass a title
          required: true
          schema:
            type: string
            minimum: 1
            maximum: 1
      responses:
        '200':
          description: Movie item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieItem'
        '400':
          description: bad input parameter
  /movie/{director}:
    get:
      tags:
        - developers
      summary: get the movie by its director
      operationId: get_movie_bydirector
      description: |
        By passing in the appropriate options, you can get Movie info
      parameters:
        - in: path
          name: director
          description: pass a directors name
          required: true
          schema:
            type: string
            minimum: 1
            maximum: 1
      responses:
        '200':
          description: Movie item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieItem'
        '400':
          description: bad input parameter
          
components:
    schemas:
      AllMovies:
        type: object
        required:
          - movies
        properties:
          movies:
            type: array
            items:
              type: object
              $ref: '#/components/schemas/MovieItem'
              
      MovieItem:
        type: object
        required:
          - title
          - rating
          - director
          - id
          - command
          - URI
        properties:
          title:
            type: string
            example: The Martian
          rating:
            type: integer
            example: 7
          director:
            type: string
            example: Paul McGuigan
          id:
            type: string
            example: 39ab85e5-5e8e-4dc5-afea-65dc368bd7ab
          command:
            type: string
            example: GET
          URI:
            type: string
            example: /movies/39ab85e5-5e8e-4dc5-afea-65dc368bd7ab